{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/valeri.beizer/Desktop/react/module 23 - nextjs - meetups/pages/index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nconst DUMMY_DATA = [{\n  id: \"m1\",\n  title: \"The First Meetup\",\n  image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c3/Stockholm.jpg/1024px-Stockholm.jpg\",\n  address: \"Some Street 79, 123 45 Some City\",\n  description: \"This is the first meetup\"\n}, {\n  id: \"m2\",\n  title: \"The Second Meetup\",\n  image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c3/Stockholm.jpg/1024px-Stockholm.jpg\",\n  address: \"Some Street 3, 123 45 Some City\",\n  description: \"This is the second meetup\"\n}];\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n} // export async function getServerSideProps(context) {\n//     //for updating after each incoming request\n//     const req = context.req;\n//     const res = context.res;\n//     return {\n//         props: {\n//             meetups: DUMMY_DATA\n//         }\n//     }\n// }\n\n\nexport async function getStaticProps() {\n  //fetch data from an API or database. You always  have to return props!\n  const client = await MongoClient.connect(\"mongodb+srv://valeryiabeizer:pCV32dYi94mAS@cluster0.y2ttp.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    revalidate: 3600 //amout of seconds after which the data will be re pre-rendered\n\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["/Users/valeri.beizer/Desktop/react/module 23 - nextjs - meetups/pages/index.js"],"names":["MongoClient","MeetupList","DUMMY_DATA","id","title","image","address","description","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","_id","toString","revalidate"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AAEA,MAAMC,UAAU,GAAG,CACjB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,kBAFT;AAGEC,EAAAA,KAAK,EACH,8FAJJ;AAKEC,EAAAA,OAAO,EAAE,kCALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CADiB,EASjB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,mBAFT;AAGEC,EAAAA,KAAK,EACH,8FAJJ;AAKEC,EAAAA,OAAO,EAAE,iCALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CATiB,CAAnB;;AAmBA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,C,CAED;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CACnB,2GADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AACAN,EAAAA,MAAM,CAACO,KAAP;AAEA,SAAO;AACLV,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAaC,MAAD,KAAa;AAChCjB,QAAAA,KAAK,EAAEiB,MAAM,CAACjB,KADkB;AAEhCE,QAAAA,OAAO,EAAEe,MAAM,CAACf,OAFgB;AAGhCD,QAAAA,KAAK,EAAEgB,MAAM,CAAChB,KAHkB;AAIhCF,QAAAA,EAAE,EAAEkB,MAAM,CAACC,GAAP,CAAWC,QAAX;AAJ4B,OAAb,CAAZ;AADJ,KADF;AASLC,IAAAA,UAAU,EAAE,IATP,CASa;;AATb,GAAP;AAWD;AAED,eAAehB,QAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nconst DUMMY_DATA = [\n  {\n    id: \"m1\",\n    title: \"The First Meetup\",\n    image:\n      \"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c3/Stockholm.jpg/1024px-Stockholm.jpg\",\n    address: \"Some Street 79, 123 45 Some City\",\n    description: \"This is the first meetup\",\n  },\n  {\n    id: \"m2\",\n    title: \"The Second Meetup\",\n    image:\n      \"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c3/Stockholm.jpg/1024px-Stockholm.jpg\",\n    address: \"Some Street 3, 123 45 Some City\",\n    description: \"This is the second meetup\",\n  },\n];\n\nfunction HomePage(props) {\n  return <MeetupList meetups={props.meetups} />;\n}\n\n// export async function getServerSideProps(context) {\n//     //for updating after each incoming request\n//     const req = context.req;\n//     const res = context.res;\n\n//     return {\n//         props: {\n//             meetups: DUMMY_DATA\n//         }\n//     }\n// }\n\nexport async function getStaticProps() {\n  //fetch data from an API or database. You always  have to return props!\n  const client = await MongoClient.connect(\n    \"mongodb+srv://valeryiabeizer:pCV32dYi94mAS@cluster0.y2ttp.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n\n  return {\n    props: {\n      meetups: meetups.map((meetup) => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString(),\n      })),\n    },\n    revalidate: 3600, //amout of seconds after which the data will be re pre-rendered\n  };\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}