{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/valeri.beizer/Desktop/react/module 23 - nextjs - meetups/pages/index.js\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport Head from \"next/head\";\nimport { Fragment } from \"react\";\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"React Meetup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"A huge space for searching React meetups!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n} // export async function getServerSideProps(context) {\n//     //for updating after each incoming request\n//     const req = context.req;\n//     const res = context.res;\n//     return {\n//         props: {\n//             meetups: DUMMY_DATA\n//         }\n//     }\n// }\n\n\n_c = HomePage;\nexport var __N_SSG = true;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/valeri.beizer/Desktop/react/module 23 - nextjs - meetups/pages/index.js"],"names":["MeetupList","Head","Fragment","HomePage","props","meetups"],"mappings":";;AACA,OAAOA,UAAP,MAAuB,kCAAvB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,C,CAED;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;KAtBSF,Q;;AAiDT,eAAeA,QAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport Head from \"next/head\";\nimport { Fragment } from \"react\";\n\nfunction HomePage(props) {\n  return (\n    <Fragment>\n      <Head>\n          <title>React Meetup</title>\n          <meta name=\"description\" content=\"A huge space for searching React meetups!\"></meta>\n      </Head>\n      <MeetupList meetups={props.meetups} />\n    </Fragment>\n  );\n}\n\n// export async function getServerSideProps(context) {\n//     //for updating after each incoming request\n//     const req = context.req;\n//     const res = context.res;\n\n//     return {\n//         props: {\n//             meetups: DUMMY_DATA\n//         }\n//     }\n// }\n\nexport async function getStaticProps() {\n  //fetch data from an API or database. You always  have to return props!\n  const client = await MongoClient.connect(\n    \"mongodb+srv://valeryiabeizer:pCV32dYi94mAS@cluster0.y2ttp.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n\n  return {\n    props: {\n      meetups: meetups.map((meetup) => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString(),\n      })),\n    },\n    revalidate: 1, //amout of seconds after which the data will be re pre-rendered\n  };\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}