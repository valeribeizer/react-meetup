{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/valeri.beizer/Desktop/react/module 23 - nextjs - meetups/pages/[meetupId]/index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\n\nfunction MeetupDetail() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetails, {\n    image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c3/Stockholm.jpg/1024px-Stockholm.jpg\",\n    title: \"The First Meetup\",\n    address: \"Some Street 79, 123 45 Some city\",\n    description: \"This are details about the first meetup\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://valeryiabeizer:pCV32dYi94mAS@cluster0.y2ttp.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId; // fetching data from an API or database or filesystem\n\n  console.log(meetupId);\n  return {\n    props: {\n      meetupDetail: {\n        image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c3/Stockholm.jpg/1024px-Stockholm.jpg\",\n        id: meetupId,\n        title: \"The First Meetup\",\n        address: \"Some Street 79, 123 45 Some city\",\n        description: \"This are details about the first meetup\"\n      }\n    }\n  };\n}\nexport default MeetupDetail;","map":{"version":3,"sources":["/Users/valeri.beizer/Desktop/react/module 23 - nextjs - meetups/pages/[meetupId]/index.js"],"names":["MongoClient","MeetupDetails","MeetupDetail","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","console","log","props","meetupDetail","image","id","title","address","description"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,aAAP,MAA0B,wCAA1B;;AAEA,SAASC,YAAT,GAAwB;AACtB,sBACE,QAAC,aAAD;AACE,IAAA,KAAK,EAAC,8FADR;AAEE,IAAA,KAAK,EAAC,kBAFR;AAGE,IAAA,OAAO,EAAC,kCAHV;AAIE,IAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AAED,OAAO,eAAeC,cAAf,GAAgC;AAEnC,QAAMC,MAAM,GAAG,MAAMJ,WAAW,CAACK,OAAZ,CACnB,2GADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAG;AAAR,GAA3B,EAAuCC,OAAvC,EAAtB;AAEF,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAYC,MAAM,KAAK;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACL,GAAP,CAAWQ,QAAX;AAAZ;AAAV,KAAL,CAAlB;AAFF,GAAP;AAID;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC,CAD4C,CAE5C;;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AAEA,SAAO;AACLM,IAAAA,KAAK,EAAE;AACLC,MAAAA,YAAY,EAAE;AACZC,QAAAA,KAAK,EACH,8FAFU;AAGZC,QAAAA,EAAE,EAAET,QAHQ;AAIZU,QAAAA,KAAK,EAAE,kBAJK;AAKZC,QAAAA,OAAO,EAAE,kCALG;AAMZC,QAAAA,WAAW,EAAE;AAND;AADT;AADF,GAAP;AAYD;AAED,eAAe5B,YAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\n\nfunction MeetupDetail() {\n  return (\n    <MeetupDetails\n      image=\"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c3/Stockholm.jpg/1024px-Stockholm.jpg\"\n      title=\"The First Meetup\"\n      address=\"Some Street 79, 123 45 Some city\"\n      description=\"This are details about the first meetup\"\n    />\n  );\n}\n\nexport async function getStaticPaths() {\n    \n    const client = await MongoClient.connect(\n      \"mongodb+srv://valeryiabeizer:pCV32dYi94mAS@cluster0.y2ttp.mongodb.net/meetups?retryWrites=true&w=majority\"\n    );\n    const db = client.db();\n\n    const meetupsCollection = db.collection(\"meetups\");\n\n    const meetups = await meetupsCollection.find({}, { _id : 1}).toArray();\n\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({ params: { meetupId: meetup._id.toString()}}))\n  };\n}\n\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  // fetching data from an API or database or filesystem\n  console.log(meetupId);\n\n  return {\n    props: {\n      meetupDetail: {\n        image:\n          \"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c3/Stockholm.jpg/1024px-Stockholm.jpg\",\n        id: meetupId,\n        title: \"The First Meetup\",\n        address: \"Some Street 79, 123 45 Some city\",\n        description: \"This are details about the first meetup\",\n      },\n    },\n  };\n}\n\nexport default MeetupDetail;\n"]},"metadata":{},"sourceType":"module"}