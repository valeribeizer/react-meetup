{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/valeri.beizer/Desktop/react/module 23 - nextjs - meetups/pages/[meetupId]/index.js\";\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\n\nfunction MeetupDetail(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetails, {\n    image: props.selectedMeetup.image,\n    title: props.selectedMeetup.title,\n    address: props.selectedMeetup.address,\n    description: props.selectedMeetup.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MeetupDetail;\nexport var __N_SSG = true;\nexport default MeetupDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetail\");","map":{"version":3,"sources":["/Users/valeri.beizer/Desktop/react/module 23 - nextjs - meetups/pages/[meetupId]/index.js"],"names":["MeetupDetails","MeetupDetail","props","selectedMeetup","image","title","address","description"],"mappings":";;AACA,OAAOA,aAAP,MAA0B,wCAA1B;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,sBACE,QAAC,aAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,cAAN,CAAqBC,KAD9B;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACC,cAAN,CAAqBE,KAF9B;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACC,cAAN,CAAqBG,OAHhC;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACC,cAAN,CAAqBI;AAJpC;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KATQN,Y;;AAwDT,eAAeA,YAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\n\nfunction MeetupDetail(props) {\n  return (\n    <MeetupDetails\n      image={props.selectedMeetup.image}\n      title={props.selectedMeetup.title}\n      address={props.selectedMeetup.address}\n      description={props.selectedMeetup.description}\n    />\n  );\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://valeryiabeizer:pCV32dYi94mAS@cluster0.y2ttp.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n  client.close();\n\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: { meetupId: meetup._id.toString() },\n    })),\n  };\n}\n\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  // fetching data from an API or database or filesystem\n  const client = await MongoClient.connect(\n    \"mongodb+srv://valeryiabeizer:pCV32dYi94mAS@cluster0.y2ttp.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId),\n  });\n  console.log(selectedMeetup);\n\n  return {\n    props: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        image: selectedMeetup.image,\n        address: selectedMeetup.address,\n        description: selectedMeetup.description\n    },\n  };\n}\n\nexport default MeetupDetail;\n"]},"metadata":{},"sourceType":"module"}